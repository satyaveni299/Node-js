const express = require('express')
const app = express()
const path = require('path')
const dbPath = path.join(__dirname, 'covid19India.db')
const {open} = require('sqlite')
const sqlite3 = require('sqlite3')
app.use(express.json())
let db = null
const initializeDBandServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () => {
      console.log('server is running at http://localhost:3000/')
    })
  } catch (e) {
    console.log(`Error DB: ${e.message}`)
    process.exit(1)
  }
}
initializeDBandServer()
app.get('/states/', async (request, response) => {
  const getQuery = `SELECT state_id AS stateId,state_name as stateName,population FROM state;`
  const res = await db.all(getQuery)
  response.send(res)
})

app.get('/states/:stateId/', async (request, response) => {
  const {stateId} = request.params
  const getQuery = `SELECT state_id AS stateId,state_name as stateName,population FROM state WHERE stateId=${stateId};`
  const res = await db.all(getQuery)
  response.send(res)
})

app.post('/districts/', async (request, response) => {
  const {districtName, stateId, cases, cured, active, deaths} = request.body
  const createQuery = `INSERT INTO district
  (district_name,state_id,cases,cured,active,deaths)
  VALUES('${districtName}',
  ${stateId},
  ${cases},
  ${cured},
  ${active},
  ${deaths});`
  const res = await db.run(createQuery)
  response.send('District Successfully Added')
})
app.get('/districts/:districtId/', async (request, response) => {
  const {districtId} = request.params
  const getQuery = `SELECT 
  district_id AS districtId,
  district_name as districtName,
  state_id AS stateId,
  cases,cured,active,deaths
  FROM district WHERE district_id=${districtId};`
  const res = await db.all(getQuery)
  response.send(res)
})
app.delete('/districts/:districtId/', async (request, response) => {
  const {districtId} = request.params
  const query = `DELETE FROM district WHERE district_id=${districtId};`
  const res = await db.run(query)
  response.send('District Removed')
})
app.put('/districts/:districtId/', async (request, response) => {
  const {districtId} = request.params
  const {districtName, stateId, cases, cured, active, deaths} = request.body
  const updateQuery = `UPDATE district 
  SET 
  district_name='${districtName}',
  state_id=${stateId},
  cases=${cases},
  cured=${cured},
  active=${active},
  deaths=${deaths}
  WHERE district_id =${districtId};`
  const res = await db.run(updateQuery)
  response.send('District Details Updated')
})
app.get('/states/:stateId/stats/', async (request, response) => {
  const {stateId} = request.params
  const statQuery = `SELECT
   sum(cured)+sum(active)+sum(deaths) as totalCases,
   sum(cured) as totalCured,
   sum(active) as totalActive,
   sum(deaths) as totalDeaths
   FROM district WHERE state_id=${stateId};`
  const res = await db.get(statQuery)
  response.send(res)
})
app.get('/districts/:districtId/details/', async (request, response) => {
  const {districtId} = request.params
  const getQuery = `
    SELECT state.state_name AS stateName
    FROM district
    INNER JOIN state ON district.state_id = state.state_id
    WHERE district.district_id = ${districtId};
  ;`
  const res = await db.get(getQuery)
  response.send(res)
})
module.exports = app
